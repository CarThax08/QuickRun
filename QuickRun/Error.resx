<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADflBYA35UXAd+U
        FDPekxNa3pESWt2QEVrdjhBa3I0PWtyMDlrbig1a2okMWtqHC1rZhgpa2YQJWtiDCFrXggda14AGWtZ/
        BVrWfgRa1n4EWtZ+BFrWfgRa1n4EWtZ+BFrWfgRa1n4EWtZ+BD/VfgQG1X4EAAAAAAAAAAAAAAAAAN+V
        FQDflRUQ4JUVwt+UFP/fkxP/3pES/92QEf/djxD/3I0P/9yMDv/big3/2okM/9qIC//Zhgr/2YUJ/9iD
        CP/Yggf/14AG/9Z/Bf/WfgT/1n4E/9Z+BP/WfgT/1n4E/9Z+BP/WfgT/1n4E7NZ+BEjWfgQAAAAAAAAA
        AAAAAAAA+9BNSvTBQGPjnR3X4JcW/+CVFf/flBT/3pMT/96REv/dkBH/3Y4Q/9yND//biw7/24oN/9qJ
        DP/ahwv/2YYK/9mECf/Ygwj/14EH/9eABv/WfwT/1n4E/9Z+BP/WfgT/1n4E/9Z+BP/WfgT/1n4Ekb6T
        FADZfgIAAAAAAAAAAAD80k73+MhH/+urLP/hmRj/4ZgX/+CWFv/flRX/35QU/9+SE//ekRL/3Y8R/92O
        EP/cjQ//3IsO/9uKDf/aiAv/2ocK/9mGCf/ZhAj/2IMH/9iBBv/XgAX/1n8E/9Z+BP/WfgT/1n4E/9Z+
        BP/WfgTJ1n4EEtZ+BAAAAAAAAAAAAP3VUPf6zUv/8Lc4/+OdG//imhn/4ZkY/+CXF//elRX/2pEU/9qQ
        E//ZjhL/2I0R/9iMEP/Xig//14kO/9aHDf/Whgz/1YUL/9SDCv/Uggn/04EI/9N/B//Sfgb/030E/9V+
        BP/WfgT/1n4E/9Z+BO/WfgQ61n4EAAAAAAAAAAAA/dZRS/vQTVryuztj5J8d1+OdG//imxr/4ZkX/9ud
        Lf/pzZv/7tev/+7Xr//t1Kv/7NSr/+zTq//s06r/7NKq/+zSqf/r0an/69Gp/+vQqf/r0Kj/6tCo/+rQ
        qv/gtnr/04AN/9Z/BP/WfgT/1n4E/9Z+BHTXfQUAAAAAAAAAAAAAAAAA46EeAOGoIAHkoB2W5J8c/+Oe
        G//inBn/3J8w//ft2v/y593/6NPA//38+///////////////////////////////////////////////
        //////////////nx5v/WkjD/14AE/9eABf/WfwT/1n4EsNZ+BAfWfgQAAAAAAAAAAAAAAAAA5aMfAOWi
        HVbloh765KAd/+SfHP/dmh3/7tes/+DFrP+xbCn/8ufc////////////////////////////////////
        /////////////////////////v38/96tZf/VgQX/2IIH/9eBBv/XgAXg1oAFJNaABQAAAAAA/thSS/3V
        UFr6z01Y8bk4eOalIvLlox//5KEe/+GdGf/lv3T/8OTX/7BqJ//gxKn/////////////////////////
        ////////////////////////////////////////6cyg/9SEDP/ZhQn/2IMI/9iCB/rXgQZW14EHAAAA
        AAD+2FL3/dZR//vQTf/2w0P/6qwq/+alIP/lpCD/5KEc/9+rRf/37+H/voRM/8iXaP////7/////////
        ///////////////////////////////////////////////////06NT/1Y8i/9qHCv/Zhgr/2YQJ/9iE
        CJPYhB0A2IQKAP7ZU/f+11L//NJO//jIR//utDL/56ci/+amIv/mpSD/36Io//PjxP/hx6//1K6L//37
        +v////////////////////////////////////////////////////////////z59P/cpE7/2YcJ/9qI
        DP/ahwv/2YYKy9mFChPZhQoA/tlTS/7YUlr8009a+sxKWO61MnnoqiTy56kj/+enIv/iox//58V///nz
        5v/58uX/+fLl//ny5f/58uT/+fLk//nx5P/58eT/+PHk//jx5P/48eT/+PHk//jx5P/48OT/+PDj/9+w
        Zv/ZiQv/24sN/9uJDP/aiAvw2ogLOtqICwAAAAAAAAAAAAAAAADprSYA6a0lFOmtJsvoqyX/6Kok/+eo
        I//hpSj/4Kk4/9+oOf/fpzj/3qU3/96lNv/dpDX/3aI0/9yhM//coDL/258y/9udMf/anDD/2psv/9qa
        Lv/ZmC3/2ZEb/9yOEP/cjQ//3IwO/9uKDf/bigx024oNAAAAAAAAAAAAAAAAAOKpGgD/xlgA6q4nkemu
        J//prCb/6Ksl/+iqI//npyH/56Yg/+akH//lox7/5aEd/+SgHP/knxv/450a/+KcGf/imhj/4ZkX/+CX
        Fv/glhT/35UT/9+TEv/ekhP/3pES/92QEf/djhD/3I0P/9yMDrDdjQ4J/9lTS/7YUlr91lFa+9BNWvjH
        R1fssi+a6q4o/+qvKP/prSf/6awm/+iqJf/oqST/56gj/+amIv/mpSD/5aMf/+WiHv/koB3/458c/+Oe
        G//inBr/4psZ/+GZGP/hmBf/4JcW/9+VFf/flBT/3pIT/96REv/djxH/3I4Q4daIDzD/2VP3/tlT//7X
        Uf/80k7/+MlI/++1N/7cjxT/2IkP/9eID//Vhw//1IYP/9OFD//Rgw//0IIO/86BDv/Nfw7/y34O/8p9
        Dv/IfA7/x3oO/8Z5Dv/EeA7/w3cO/8F2Dv/AdA3/vnMN/71xDf+8cA3/um8N/7luDf+2bA37sGYMaP/Z
        U/f+2VP//thS//zUT//6zEr/9L0//9qJEf/OcwD/zXMA/8tyAf/JcQH/x28B/8VuAv/DbQL/wWwD/79r
        A/+9agT/vGgF/7pnBf+4Zgb/tmUG/7RkB/+yYgf/sGEI/65gCP+sXwj/ql4J/6hdCf+mWwr/pVoK/6NZ
        C/+iWQun/9pUS/7ZU1r+2FJa/dVQWvrOS1r3xUVY2YcPnNB1AP/OdQH/zHMB/8pyAv/IcQL/x3AD/8Vv
        A//DbgP/wWwE/79rBP+9agX/u2kF/7loBv+3Zgb/tmUH/7RkB/+yYwf/sGII/65hCP+sXwn/ql4J/6hd
        Cv+mXAr/pVsK/6NZC+YAAAAAAAAAAAAAAAAAAAAAAAAAANJ3AADSdwAy0XYA4M91Af/NdAH/y3MC/8ly
        Av/IcAL/xm8D/8RuA//CbQT/wGwE/75rBf+8aQX/umgF/7hnBv+3Zgb/tWUH/7NjB/+xYgj/r2EI/61g
        CP+rXwn/qV4J/6dcCv+lWwr/pFoL8gAAAAAAAAAAAAAAAAAAAAAAAAAA0ncAANN4AAPRdgA30HYBWs50
        AVrMcwFaynICWshxAlrGcANaxG4DWsJtBFrBbARav2sEWr1qBVq7aQVauWcGWrdmBlq1ZQdas2QHWrFj
        B1qwYQharmAIWqxfCVqqXglaqF0KWqZcClqkWgpDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////////////////////gAAAD4AAAA8AAAAPAAAABwAA
        AAcAAAAHwAAAA+AAAAMAAAADAAAAAwAAAAEAAAAB8AAAAfgAAAAAAAAAAAAAAAAAAAAAAAAA/AAAAPwA
        AAD///////////////////////////////8=
</value>
  </data>
</root>